//This example allows you to input pwm values from a web page for two pwm pins (9_14 and 9_16).
//Open a browser to your BBB ip and add :81 on the end to open port 81


var http = require('http');
var bb = require('bonescript');


var statReturn = '/';
var valstr='boogie';
var v1=0;
var v2=0;

setup = function() {
    pinMode('USR0', OUTPUT);
};

bb.pinMode('USR0', bb.OUTPUT);
bb.pinMode("P9_14", bb.OUTPUT);
bb.pinMode("P9_16", bb.OUTPUT);

setInterval(leds, 100);
setInterval(alive, 1000);

function alive() 
    {
        console.log(v1);
        console.log(v2);
    }


function leds() 
    {
    
    
    if(statReturn.length > 2){
        v1=Number(statReturn.substring(statReturn.indexOf("val1=")+5,statReturn.indexOf("&val2=")));
        v2=Number(statReturn.substring(statReturn.indexOf("val2=")+5));
    
        if(v1>100)
            v1=100;
        if(v2>100)
            v2=100;
    
        bb.analogWrite('P9_14',v1/100);
        bb.analogWrite('P9_16',v2/100);
        }
    };

http.createServer(function (req, res) 
    {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.end('<html><body><CENTER>\
    <form action="value_form.asp">\
    Enter a pwm value from 0 to 100<br>\
    PWM on 9_14: <input type="number" name="val1"><br>\
    PWM on 9_16: <input type="number" name="val2"><br>\
    <input type="submit" value="Submit"><br>\
    </form></body></html>');
    statReturn = req.url;
    console.log(statReturn);
    }
).listen(81);


